{"ast":null,"code":"// ChatbotAPI.js\n\n// export const getChatbotResponse = async (message) => {\n//   try {\n//     const response = await fetch('http://localhost:8000/chat/chat_response/', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         // Include other headers as required, e.g., Authorization if needed\n//       },\n//       body: JSON.stringify({ message }),\n//     });\n//     if (!response.ok) {\n//       throw new Error(`HTTP error! status: ${response.status}`);\n//     }\n//     const data = await response.json();\n//     return data.message;\n//   } catch (error) {\n//     console.error('Could not get chatbot response:', error);\n//     return \"Sorry, I couldn't understand that.\";\n//   }\n// };\n\n// export default { getChatbotResponse };\n\n// ChatbotAPI.js\nexport const getChatbotResponse = async (userMessage, mbtiType) => {\n  const payload = {\n    message: userMessage,\n    friend_mbti: mbtiType\n  };\n\n  // Make the API call\n  const response = await fetch('/chat/chat_response/', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(payload)\n  });\n  if (!response.ok) {\n    throw new Error(`HTTP error! Status: ${response.status}`);\n  }\n  const data = await response.json();\n  return data.message;\n};","map":{"version":3,"names":["getChatbotResponse","userMessage","mbtiType","payload","message","friend_mbti","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json"],"sources":["/Users/yuningwu/Documents/EmoAI-frontend/src/chatbot_components/ChatbotAPI.js"],"sourcesContent":["// ChatbotAPI.js\n\n// export const getChatbotResponse = async (message) => {\n//   try {\n//     const response = await fetch('http://localhost:8000/chat/chat_response/', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         // Include other headers as required, e.g., Authorization if needed\n//       },\n//       body: JSON.stringify({ message }),\n//     });\n//     if (!response.ok) {\n//       throw new Error(`HTTP error! status: ${response.status}`);\n//     }\n//     const data = await response.json();\n//     return data.message;\n//   } catch (error) {\n//     console.error('Could not get chatbot response:', error);\n//     return \"Sorry, I couldn't understand that.\";\n//   }\n// };\n\n// export default { getChatbotResponse };\n\n// ChatbotAPI.js\nexport const getChatbotResponse = async (userMessage, mbtiType) => {\n  const payload = {\n      message: userMessage,\n      friend_mbti: mbtiType\n  };\n\n  // Make the API call\n  const response = await fetch('/chat/chat_response/', {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(payload),\n  });\n\n  if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n  }\n\n  const data = await response.json();\n  return data.message;\n};\n\n\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,OAAO,MAAMA,kBAAkB,GAAG,MAAAA,CAAOC,WAAW,EAAEC,QAAQ,KAAK;EACjE,MAAMC,OAAO,GAAG;IACZC,OAAO,EAAEH,WAAW;IACpBI,WAAW,EAAEH;EACjB,CAAC;;EAED;EACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAsB,EAAE;IACjDC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,OAAO;EAChC,CAAC,CAAC;EAEF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;IACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBR,QAAQ,CAACS,MAAO,EAAC,CAAC;EAC7D;EAEA,MAAMC,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACZ,OAAO;AACrB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}