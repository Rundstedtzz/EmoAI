{"ast":null,"code":"var _jsxFileName = \"/Users/yuningwu/Documents/EmoAI-frontend/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    username\n  } = useParams(); // Extract username from URL\n  const [user, setUser] = useState(null); // State to store user data\n  const [friends, setFriends] = useState([]); // State to store friends data\n\n  console.log(\"friends\", friends);\n  useEffect(() => {\n    // Fetch user-specific data using the username and token\n    const fetchData = async () => {\n      const token = localStorage.getItem('token'); // Retrieve the stored token\n      if (token) {\n        try {\n          const response = await fetch(`http://localhost:8000/dashboard/${username}/`, {\n            // Make sure the endpoint is correct\n            headers: {\n              'Authorization': `Token ${token}`\n            }\n          });\n          if (response.ok) {\n            const data = await response.json();\n            console.log(\"API Response Data:\", data); // Check what's being returned\n            setUser(data.user);\n            console.log(\"User\", user);\n            setFriends(data.friends);\n          } else {\n            console.error('Failed to fetch data');\n            throw new Error('Failed to fetch data');\n          }\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n          // Handle errors here, like showing a message to the user\n        }\n      }\n    };\n    fetchData();\n  }, [username]); // Re-fetch when userId changes\n\n  // Handler for the button click\n  const handleCreateFriendClick = () => {\n    navigate('/create-friend'); // Navigate to the create-friend route\n  };\n\n  // If user data has not been loaded, you can render a loading state or return null\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 12\n    }, this); // Or any other loading state indicator\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-overlay\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"user-profile\",\n        children: [user.avatar && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `{/avatar/${user.avatar}}`,\n          alt: `Avatar of ${user.name}`,\n          className: \"user-avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              textAlign: 'left',\n              display: 'block'\n            },\n            children: [\"Username: \", user.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              textAlign: 'left',\n              display: 'block'\n            },\n            children: [\"(\", user.mbti, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"virtual-friends-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Your Virtual Friends\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"friends-list\",\n          children: friends.map((friend, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"friend\",\n            children: [friend.avatar && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${friend.avatar}`,\n              alt: `Avatar of ${friend.name}`,\n              className: \"friend-avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: friend.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"MBTI: \", friend.mbti, \"-\", friend.mbti_variant.charAt(0)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"create-friend-button\",\n        onClick: handleCreateFriendClick,\n        children: \"Create New Virtual Friend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"87yXTy1Dzb7iko0428OTkUy78Nk=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","navigate","username","user","setUser","friends","setFriends","console","log","fetchData","token","localStorage","getItem","response","fetch","headers","ok","data","json","error","Error","handleCreateFriendClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","avatar","src","alt","name","style","textAlign","display","mbti","map","friend","index","mbti_variant","charAt","onClick","_c","$RefreshReg$"],"sources":["/Users/yuningwu/Documents/EmoAI-frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport './Dashboard.css';\n\nfunction Dashboard() {\n  const navigate = useNavigate();\n  const { username } = useParams(); // Extract username from URL\n  const [user, setUser] = useState(null); // State to store user data\n  const [friends, setFriends] = useState([]); // State to store friends data\n\n  console.log(\"friends\", friends)\n  useEffect(() => {\n    // Fetch user-specific data using the username and token\n    const fetchData = async () => {\n      const token = localStorage.getItem('token'); // Retrieve the stored token\n      if (token) {\n        try {\n          const response = await fetch(`http://localhost:8000/dashboard/${username}/`, { // Make sure the endpoint is correct\n            headers: {\n              'Authorization': `Token ${token}`\n            }\n          });\n\n          if (response.ok) {\n            const data = await response.json();\n            console.log(\"API Response Data:\", data);  // Check what's being returned\n            setUser(data.user);\n            console.log(\"User\", user)\n            setFriends(data.friends);\n          } else {\n            console.error('Failed to fetch data');\n            throw new Error('Failed to fetch data');\n          }\n        } catch (error) {\n          console.error('Error fetching user data:', error);\n          // Handle errors here, like showing a message to the user\n        }\n      }\n    };\n\n    fetchData();\n  }, [username]); // Re-fetch when userId changes\n\n  // Handler for the button click\n  const handleCreateFriendClick = () => {\n    navigate('/create-friend'); // Navigate to the create-friend route\n  };\n\n  // If user data has not been loaded, you can render a loading state or return null\n  if (!user) {\n    return <div>Loading...</div>; // Or any other loading state indicator\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"dashboard-overlay\"></div>\n      <div className=\"dashboard-content\">\n        <section className=\"user-profile\">\n          {user.avatar && (\n            <img src={`{/avatar/${user.avatar}}`} alt={`Avatar of ${user.name}`} className=\"user-avatar\" />\n          )}\n          <div>\n           <h2 style={{ textAlign: 'left', display: 'block' }}>Username: {user.username}</h2>\n           <h2 style={{ textAlign: 'left', display: 'block' }}>({user.mbti})</h2>\n          </div>\n        </section>\n\n        <section className=\"virtual-friends-section\">\n            <h3>Your Virtual Friends</h3>\n            <div className=\"friends-list\">\n                {friends.map((friend, index) => (\n                    <div key={index} className=\"friend\"> \n                        {friend.avatar && (\n                          <img src={`${friend.avatar}`} alt={`Avatar of ${friend.name}`} className=\"friend-avatar\" />\n                        )}\n                        <h4>{friend.name}</h4>\n                        <h4>MBTI: {friend.mbti}-{friend.mbti_variant.charAt(0)}</h4>\n                    </div>\n                ))}\n            </div>\n        </section>\n\n\n\n        <button className=\"create-friend-button\" onClick={handleCreateFriendClick}>\n          Create New Virtual Friend\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}