{"ast":null,"code":"var _jsxFileName = \"/Users/ricky/Desktop/virtual-friends/src/components/CreateFriend.js\",\n  _s = $RefreshSig$();\n// CreateFriend.js\nimport React, { useState } from 'react';\nimport './CreateFriend.css'; // Make sure to create and link this CSS file\n\n// Define the MBTI types and their corresponding button colors\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mbtiTypes = [{\n  types: ['INTJ', 'INTP', 'ENTJ', 'ENTP'],\n  color: 'lightpurple'\n}, {\n  types: ['INFJ', 'INFP', 'ENFJ', 'ENFP'],\n  color: 'lightgreen'\n}, {\n  types: ['ISTJ', 'ISFJ', 'ESTJ', 'ESFJ'],\n  color: 'lightyellow'\n}, {\n  types: ['ISTP', 'ISFP', 'ESTP', 'ESFP'],\n  color: 'lightblue'\n}];\nfunction CreateFriend() {\n  _s();\n  // State hooks for selected type, trait, and virtual friend's name\n  const [selectedType, setSelectedType] = useState(null);\n  const [selectedTrait, setSelectedTrait] = useState('');\n  const [virtualFriendName, setVirtualFriendName] = useState('');\n\n  // Function to handle MBTI type button click\n  const handleTypeClick = type => {\n    setSelectedType(type);\n    setVirtualFriendName(''); // Reset the friend's name\n    setSelectedTrait(''); // Reset the trait whenever a new type is selected\n  };\n\n  // Function to handle trait button click\n  const handleTraitClick = trait => {\n    setSelectedTrait(trait);\n    // Optionally reset the friend's name whenever a new trait is selected\n    // setVirtualFriendName(''); \n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-friend-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selection-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mbti-types\",\n        children: mbtiTypes.map((group, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mbti-row\",\n          children: group.types.map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `mbti-button ${group.color} ${selectedType === type ? 'selected' : ''}`,\n            onClick: () => handleTypeClick(type),\n            children: type\n          }, type, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"traits\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `trait-button ${selectedTrait === 'Assertive' ? 'selected' : ''}`,\n          onClick: () => handleTraitClick('Assertive'),\n          children: \"Assertive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `trait-button ${selectedTrait === 'Turbulent' ? 'selected' : ''}`,\n          onClick: () => handleTraitClick('Turbulent'),\n          children: \"Turbulent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-and-name-container\",\n      children: selectedType && selectedTrait ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar-display\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `/avatars/${selectedType}-${selectedTrait}.png`,\n            alt: \"Avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name your virtual friend\",\n          className: \"friend-name-input\",\n          value: virtualFriendName,\n          onChange: e => setVirtualFriendName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) :\n      /*#__PURE__*/\n      // Placeholder or empty space when no type or trait is selected\n      _jsxDEV(\"div\", {\n        className: \"placeholder-avatar-and-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(CreateFriend, \"NiPqWly/9gBtWpLzNpJEI/kzN/Q=\");\n_c = CreateFriend;\nexport default CreateFriend;\nvar _c;\n$RefreshReg$(_c, \"CreateFriend\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","mbtiTypes","types","color","CreateFriend","_s","selectedType","setSelectedType","selectedTrait","setSelectedTrait","virtualFriendName","setVirtualFriendName","handleTypeClick","type","handleTraitClick","trait","className","children","map","group","index","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/ricky/Desktop/virtual-friends/src/components/CreateFriend.js"],"sourcesContent":["// CreateFriend.js\nimport React, { useState } from 'react';\nimport './CreateFriend.css'; // Make sure to create and link this CSS file\n\n// Define the MBTI types and their corresponding button colors\nconst mbtiTypes = [\n  { types: ['INTJ', 'INTP', 'ENTJ', 'ENTP'], color: 'lightpurple' },\n  { types: ['INFJ', 'INFP', 'ENFJ', 'ENFP'], color: 'lightgreen' },\n  { types: ['ISTJ', 'ISFJ', 'ESTJ', 'ESFJ'], color: 'lightyellow' },\n  { types: ['ISTP', 'ISFP', 'ESTP', 'ESFP'], color: 'lightblue' },\n];\n\nfunction CreateFriend() {\n  // State hooks for selected type, trait, and virtual friend's name\n  const [selectedType, setSelectedType] = useState(null);\n  const [selectedTrait, setSelectedTrait] = useState('');\n  const [virtualFriendName, setVirtualFriendName] = useState('');\n\n  // Function to handle MBTI type button click\n  const handleTypeClick = (type) => {\n    setSelectedType(type);\n    setVirtualFriendName(''); // Reset the friend's name\n    setSelectedTrait(''); // Reset the trait whenever a new type is selected\n  };\n\n  // Function to handle trait button click\n  const handleTraitClick = (trait) => {\n    setSelectedTrait(trait);\n    // Optionally reset the friend's name whenever a new trait is selected\n    // setVirtualFriendName(''); \n  };\n\n  return (\n    <div className=\"create-friend-container\">\n      <div className=\"selection-container\">\n        {/* MBTI type selection */}\n        <div className=\"mbti-types\">\n          {mbtiTypes.map((group, index) => (\n            <div key={index} className=\"mbti-row\">\n              {group.types.map((type) => (\n                <button\n                  key={type}\n                  className={`mbti-button ${group.color} ${selectedType === type ? 'selected' : ''}`}\n                  onClick={() => handleTypeClick(type)}\n                >\n                  {type}\n                </button>\n              ))}\n            </div>\n          ))}\n        </div>\n        {/* Trait selection */}\n        <div className=\"traits\">\n          <button \n            className={`trait-button ${selectedTrait === 'Assertive' ? 'selected' : ''}`}\n            onClick={() => handleTraitClick('Assertive')}\n          >\n            Assertive\n          </button>\n          <button \n            className={`trait-button ${selectedTrait === 'Turbulent' ? 'selected' : ''}`}\n            onClick={() => handleTraitClick('Turbulent')}\n          >\n            Turbulent\n          </button>\n        </div>\n      </div>\n\n      {/* Avatar and name input section */}\n      <div className=\"avatar-and-name-container\">\n        {selectedType && selectedTrait ? (\n          <>\n            {/* Avatar display */}\n            <div className=\"avatar-display\">\n              {/* Placeholder for avatar image */}\n              <img src={`/avatars/${selectedType}-${selectedTrait}.png`} alt=\"Avatar\" />\n            </div>\n            {/* Input for naming the virtual friend */}\n            <input \n              type=\"text\" \n              placeholder=\"Name your virtual friend\" \n              className=\"friend-name-input\"\n              value={virtualFriendName}\n              onChange={(e) => setVirtualFriendName(e.target.value)}\n            />\n          </>\n        ) : (\n          // Placeholder or empty space when no type or trait is selected\n          <div className=\"placeholder-avatar-and-name\">\n            {/* Placeholder content */}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default CreateFriend;\n\n\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}